{"version":3,"sources":["routes/endpoints.ts","components/pages/chat/index.tsx","components/atoms/logo/index.tsx","validations/authorization.tsx","components/atoms/Input/index.tsx","components/molecules/inputForm/index.tsx","components/atoms/Button/index.tsx","assets/reset.svg","components/molecules/captcha/index.tsx","components/molecules/securityCode/index.tsx","components/molecules/loading/index.tsx","api/authorization.tsx","api/captcha.tsx","components/organisms/formLogin/index.tsx","components/pages/login/index.tsx","components/molecules/chatHeader/index.tsx","components/atoms/iconProfile/index.tsx","components/molecules/chatContactItem/index.tsx","store/contacts.tsx","components/organisms/chatContactList/index.tsx","components/molecules/message/index.tsx","store/messageInput.tsx","components/molecules/fileMsg/index.tsx","store/storeFile.tsx","components/molecules/inputMsg/index.tsx","assets/arrowChatHeader.svg","components/molecules/chatMsgHeader/index.tsx","components/organisms/chatMessage/index.tsx","api/upload.tsx","assets/arrowSelector.svg","components/molecules/selectGender/index.tsx","store/genders.tsx","components/organisms/formSignup/index.tsx","components/pages/signup/index.tsx","routes/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["SCREENS","ws","Logo","theme","className","cn","src","loginSchema","yup","shape","login","required","min","max","password","captcha","signupSchema","password_confirm","oneOf","name","gender_id","integer","Input","value","type","placeholder","focused","disabled","tabIndex","autocomplete","onChange","onFocus","onBlur","callbacks","useCallback","autoFocus","autoComplete","InputForm","description","errorText","inValidInput","props","useState","focusInput","setFocusInput","Button","children","onClick","e","Captcha","alt","resetCaptcha","SecurityCode","Loading","authorization","_apiBase","postRequest","url","data","a","fetch","method","body","headers","credentials","response","ok","json","console","log","status","statusText","postSignUp","signupData","FormData","append","res","postLogin","loginData","localStorage","setItem","this","_apiCaptcha","update","FormLogin","btnDisabled","setBtnDisabled","uploadData","setUploadData","captchaSrc","setCaptchaSrc","history","useHistory","useEffect","updateCaptcha","formik","useFormik","initialValues","onSubmit","values","push","SCREEN_CHAT","alert","validationSchema","CapSrc","handleSubmit","handleChange","touched","Boolean","errors","SCREEN_SIGNUP","Login","ChatHeader","focusChat","IconProfile","gender","ChatContactItem","lastMsg","lastMsgYou","select","id","to","activeClassName","length","substr","lastMsgShort","Contacts","allUsers","makeAutoObservable","message","personId","map","contact","dialogue","unshift","item","index","String","contacts","ChatContactList","loading","contactList","toJS","listContactItem","text","your","Message","yourMsg","messageInput","target","FileMsg","file","urlFile","setUrlFile","sizeString","size","toFixed","fileType","reader","FileReader","readAsDataURL","onload","result","storeFile","InputMsg","observer","onSendMsg","onLoadFile","fileLoaded","ChatMsgHeader","lastSeen","onBack","arrowBack","ChatMessage","noContact","idContact","useParams","listMessage","fileData","href","createDialogue","chatMsgHeader","inputMsg","uploadFile","_apiUploadFile","postFile","Chat","loadingContact","setLoadingContact","setFocusChat","setFileLoaded","sendingMsg","setSendingMsg","WebSocket","getItem","onopen","createContcatLsit","onclose","event","wasClean","code","reason","onerror","error","onmessage","JSON","parse","initialAllUsers","getAllUsers","stringify","send","onFocusChat","saveMessage","resetInput","resetStore","files","addFile","displayDialogue","find","getDialogue","customStyles","option","provided","state","padding","menu","width","control","display","border","borderRadius","height","singleValue","opacity","isDisabled","transition","color","fontFamily","fontWeight","fontSize","lineHeight","paddingLeft","marginLeft","valueContainer","indicatorSeparator","DropdownIndicator","arrowSelector","SelectGender","genders","optionGenders","label","options","styles","components","Genders","FormSignup","getGender","SCREEN_LOGIN","selectedOption","setFieldValue","Signup","Routes","path","exact","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.843faa0c.chunk.js","sourcesContent":["export enum SCREENS {\n  SCREEN_LOGIN = \"/login\",\n  SCREEN_SIGNUP = \"/signup\",\n  SCREEN_CHAT = \"/chat\",\n}\n","import React, { FC, useState, useEffect } from \"react\";\nimport { ChatHeader } from \"../../molecules/chatHeader\";\nimport { ChatContactList } from \"../../organisms/chatContactList\";\nimport { ChatMessage } from \"../../organisms/chatMessage\";\nimport { useParams } from \"react-router-dom\";\nimport cn from \"classnames\";\nimport { messageInput } from \"../../../store/messageInput\";\nimport { contacts } from \"../../../store/contacts\";\nimport { toJS } from \"mobx\";\nimport { observer } from \"mobx-react-lite\";\nimport { uploadFile } from \"../../../api/upload\";\nimport { storeFile } from \"../../../store/storeFile\";\n\nimport \"./chat.scss\";\n\ninterface ParamTypes {\n  idContact: string;\n}\n\nlet ws: WebSocket;\n\nexport const Chat: FC = observer(() => {\n  const [loadingContact, setLoadingContact] = useState<boolean>(false);\n  const [focusChat, setFocusChat] = useState<boolean>(false);\n  const [fileLoaded, setFileLoaded] = useState<boolean>(false);\n  const [sendingMsg, setSendingMsg] = useState<boolean>(false);\n  const { idContact } = useParams<ParamTypes>();\n\n  useEffect(() => {\n    ws = new WebSocket(\n      `ws://109.194.37.212:2346/?type=test&ws_id=${localStorage.getItem(\n        \"connect_key\"\n      )}`\n    );\n\n    ws.onopen = () => {\n      console.log(\"WS: Соединение установленно\");\n      createContcatLsit();\n    };\n\n    ws.onclose = (event) => {\n      if (event.wasClean) {\n        console.log(\n          `WS: [close] Соединение закрыто чисто, код=${event.code} причина=${event.reason}`\n        );\n      } else {\n        console.log(\"WS: [close] Соединение прервано\");\n        alert(\"Lost connection\");\n      }\n    };\n\n    ws.onerror = (error) => {\n      console.log(`WS: [error] ${error}`);\n      alert(\"Something went wrong\");\n    };\n    ws.onmessage = function (event) {\n      setLoadingContact(false);\n      try {\n        const data = JSON.parse(event.data);\n        switch (data.type) {\n          case \"user_data\":\n            break;\n          case \"users_list\":\n            contacts.initialAllUsers(data.data);\n            break;\n          case \"user_joined_info\":\n            getAllUsers();\n            break;\n          default:\n            break;\n        }\n      } catch (error) {\n        console.log(error);\n      }\n    };\n  }, []);\n\n  const getAllUsers = () => {\n    const allUsers = JSON.stringify({ type: \"users_list\" });\n    try {\n      ws.send(allUsers);\n      console.log(\"send: \", allUsers);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const createContcatLsit = () => {\n    setLoadingContact(true);\n    getAllUsers();\n  };\n\n  const onFocusChat = () => {\n    setFocusChat(!focusChat);\n  };\n\n  const onSendMsg = async () => {\n    if (!sendingMsg) {\n      if (fileLoaded) {\n        setSendingMsg(true);\n        setFileLoaded(false);\n        const file = toJS(storeFile.file);\n        const value = toJS(messageInput.value);\n        const urlFile = await uploadFile.postFile(file);\n        ws.send(value);\n        if (urlFile) {\n          contacts.saveMessage(\n            {\n              text: value,\n              your: true,\n              fileData: {\n                file: file,\n                url: `http://109.194.37.212:93${urlFile}`,\n              },\n            },\n            idContact\n          );\n        } else {\n          alert(\"Error loading file\");\n        }\n        messageInput.resetInput();\n        storeFile.resetStore();\n      } else {\n        setSendingMsg(true);\n        const value = toJS(messageInput.value);\n        if (value) {\n          contacts.saveMessage({ text: value, your: true }, idContact);\n          ws.send(value);\n          messageInput.resetInput();\n        }\n      }\n    } else {\n      alert(\"Wait for the message to be sent\");\n    }\n    setSendingMsg(false);\n  };\n\n  const onLoadFile = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const files = e.target.files;\n    if (files) {\n      const fileType = files[0].type;\n      if (\n        fileType === \"video/mp4\" ||\n        fileType === \"video/ogg\" ||\n        fileType === \"video/webm\" ||\n        fileType === \"audio/mpeg\" ||\n        fileType === \"audio/ogg\" ||\n        fileType === \"image/jpeg\" ||\n        fileType === \"image/gif\" ||\n        fileType === \"image/png\" ||\n        fileType === \"image/svg+xml\"\n      ) {\n        if (files[0].size < 2097152) {\n          storeFile.addFile(files[0]);\n          setFileLoaded(true);\n        } else {\n          alert(\"The file must be no more than 2 MB\");\n        }\n      } else {\n        alert(\"Invalid file format\");\n      }\n    }\n    e.target.value = \"\";\n  };\n\n  const getDialogue = (idContact: string | undefined) => {\n    const data = toJS(contacts.allUsers);\n    if (loadingContact) return <ChatMessage loading />;\n\n    if (!(data.length && data[0].name && data[0].gender))\n      return <ChatMessage noContact />;\n\n    if (idContact) {\n      const selectContact = data.find((contact) => contact.id === idContact);\n      const { name, dialogue, gender } = selectContact!;\n      return (\n        <ChatMessage\n          onBack={onFocusChat}\n          name={name}\n          gender={gender}\n          dialogue={dialogue}\n          loading={loadingContact}\n          onSendMsg={onSendMsg}\n          onLoadFile={onLoadFile}\n          fileLoaded={fileLoaded}\n        />\n      );\n    } else return <ChatMessage />;\n  };\n\n  const displayDialogue = getDialogue(idContact);\n\n  return (\n    <div className=\"chat\">\n      <ChatHeader focusChat={focusChat} />\n      <div\n        className={cn(\n          \"chat__content\",\n          focusChat ? \"chat__content_focus-chat\" : \"\"\n        )}\n      >\n        <ChatContactList onClick={onFocusChat} loading={loadingContact} />\n        {displayDialogue}\n      </div>\n    </div>\n  );\n});\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./logo.scss\";\n\ninterface LogoProps {\n  theme?: string;\n}\n\nexport const Logo: FC<LogoProps> = ({ theme }) => {\n  return <img className={cn(\"logo\", `logo_${theme}`)} src=\"/image/logo.svg\" />;\n};\n","import * as yup from \"yup\";\n\nexport const loginSchema = yup.object().shape({\n  login: yup\n    .string()\n    .required(\"The field must be filled\")\n    .min(2, \"Must be more than 4 characters\")\n    .max(50, \"Must be no more than 50 characters\"),\n  password: yup\n    .string()\n    .required(\"The field must be filled\")\n    .min(6, \"Must be more than 6 characters\"),\n  captcha: yup\n    .string()\n    .required(\"The field must be filled\")\n    .min(5, \"Must be 5 characters\")\n    .max(5, \"Must be 5 characters\"),\n});\n\nexport const signupSchema = yup.object().shape({\n  login: yup\n    .string()\n    .required(\"The field must be filled\")\n    .max(50, \"Must be no more than 50 characters\"),\n  password: yup.string().required(\"The field must be filled\"),\n  password_confirm: yup\n    .string()\n    .required(\"The field must be filled\")\n    .oneOf([yup.ref(\"password\"), null], \"Password mismatch\"),\n  name: yup\n    .string()\n    .required(\"The field must be filled\")\n    .max(50, \"Must be no more than 50 characters\"),\n  gender_id: yup.number().integer().required(\"The field must be filled\"),\n  captcha: yup\n    .string()\n    .required(\"The field must be filled\")\n    .min(5, \"Must be 5 characters\")\n    .max(5, \"Must be 5 characters\"),\n});\n","import React, { ChangeEventHandler, FC, useCallback } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./Input.scss\";\n\ninterface InputProps {\n  value: string;\n  type: string;\n  placeholder: string;\n  name?: string;\n  required?: boolean;\n  focused?: boolean;\n  disabled?: boolean;\n  tabIndex?: number;\n  autocomplete?: boolean;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onFocus?: () => void;\n  onBlur?: () => void;\n  theme?: string;\n}\n\nexport const Input: FC<InputProps> = ({\n  value,\n  type = \"text\",\n  placeholder,\n  required,\n  focused,\n  disabled = false,\n  tabIndex,\n  autocomplete,\n  name,\n  onChange = () => {\n    //do nothing\n  },\n  onFocus = () => {\n    //do nothing\n  },\n  onBlur = () => {\n    //do nothing\n  },\n  theme,\n}) => {\n  const callbacks = {\n    onFocus: useCallback(() => {\n      return onFocus();\n    }, [onFocus]),\n    onBlur: useCallback(() => {\n      return onBlur();\n    }, [onBlur]),\n  };\n\n  return (\n    <div className=\"input\">\n      <input\n        className={cn(\"input__input\", theme ? `input__input_${theme}` : \"\")}\n        value={value}\n        type={type}\n        placeholder={placeholder}\n        name={name}\n        tabIndex={tabIndex}\n        disabled={disabled}\n        required={required}\n        autoFocus={focused}\n        autoComplete={autocomplete ? \"on\" : \"off\"}\n        onChange={onChange}\n        onFocus={callbacks.onFocus}\n        onBlur={callbacks.onBlur}\n      />\n    </div>\n  );\n};\n","import React, { FC, useState, useCallback } from \"react\";\nimport cn from \"classnames\";\nimport { Input } from \"../../atoms/Input\";\n\nimport \"./inputForm.scss\";\n\ninterface InputFormProps {\n  placeholder: string;\n  description: string;\n  name?: string;\n  value: string;\n  required?: boolean;\n  type: \"text\" | \"password\" | \"email\";\n  inValidInput?: boolean;\n  errorText?: string | undefined;\n  theme?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: () => void;\n}\n\nexport const InputForm: FC<InputFormProps> = ({\n  description,\n  theme,\n  errorText,\n  inValidInput,\n  onBlur = () => {\n    //do nothing\n  },\n  ...props\n}) => {\n  const [focusInput, setFocusInput] = useState<boolean>(false);\n\n  const onFocus = () => {\n    setFocusInput(true);\n  };\n\n  const callbacks = {\n    onBlur: useCallback(() => {\n      setFocusInput(false);\n      return onBlur();\n    }, [onBlur]),\n  };\n\n  return (\n    <div className={cn(\"input-form\", theme ? `input-form_${theme}` : \"\")}>\n      <span className=\"input-form__description\">{description}</span>\n      <label\n        className={cn(\n          \"input-form__wrapper\",\n          focusInput ? \"input-form__wrapper_typing\" : \"\",\n          inValidInput ? \"input-form__wrapper_error\" : \"\"\n        )}\n      >\n        <Input\n          onFocus={onFocus}\n          onBlur={callbacks.onBlur}\n          theme=\"form\"\n          {...props}\n        />\n      </label>\n      {inValidInput && (\n        <div className=\"input-form_error__text\">{errorText}</div>\n      )}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\nimport \"./Button.scss\";\n\ninterface ButtonProps {\n  children: React.ReactNode;\n  type?: \"submit\" | \"reset\" | \"button\";\n  disabled?: boolean;\n  onClick?: (e: React.FormEvent) => void;\n  theme?: string;\n}\n\nexport const Button: FC<ButtonProps> = ({\n  children,\n  type,\n  disabled,\n  onClick = () => {\n    //do nothing\n  },\n  theme,\n}) => {\n  return (\n    <button\n      onClick={(e) => onClick(e)}\n      disabled={disabled}\n      type={type}\n      className={cn(\"button\", theme ? `button_${theme}` : \"\")}\n    >\n      {children}\n    </button>\n  );\n};\n","export default __webpack_public_path__ + \"static/media/reset.4a978d34.svg\";","import React, { FC } from \"react\";\nimport resetCaptcha from \"../../../assets/reset.svg\";\nimport { Button } from \"../../atoms/Button\";\n\nimport \"./captcha.scss\";\n\ninterface CaptchaProps {\n  src: string;\n  onClick?: () => void;\n}\n\nexport const Captcha: FC<CaptchaProps> = ({ src, onClick }) => {\n  return (\n    <div className=\"captcha\">\n      <img className=\"captcha__img\" src={src} alt=\"captcha\" />\n      <Button theme=\"reset-captcha\" type=\"button\" onClick={onClick}>\n        <img className=\"captcha__resetImg\" src={resetCaptcha} />\n      </Button>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { InputForm } from \"../inputForm\";\nimport { Captcha } from \"../captcha\";\n\nimport \"./securityCode.scss\";\n\ninterface SecurityCodeProps {\n  src: string;\n  placeholder: string;\n  description: string;\n  name?: string;\n  value: string;\n  required?: boolean;\n  type: \"text\" | \"password\" | \"email\";\n  inValidInput?: boolean;\n  errorText?: string | undefined;\n  theme?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  onBlur?: () => void;\n  onClick?: () => void;\n}\n\nexport const SecurityCode: FC<SecurityCodeProps> = ({\n  src,\n  onClick,\n  ...props\n}) => {\n  return (\n    <div className=\"security-code\">\n      <InputForm {...props} />\n      <Captcha src={src} onClick={onClick} />\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\n\nimport \"./loading.scss\";\n\nexport const Loading: FC = () => {\n  return (\n    <div className=\"loading\">\n      <img className=\"loading__img\" src=\"/image/loading.svg\" />\n    </div>\n  );\n};\n","class Authorization {\n  _apiBase: string;\n\n  constructor() {\n    this._apiBase = \"http://109.194.37.212:93/api\";\n  }\n\n  postRequest = async (url: string, data: any) => {\n    const response = await fetch(`${this._apiBase}${url}`, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      credentials: \"same-origin\",\n    });\n    if (response.ok) {\n      const json = await response.json();\n      return json;\n    }\n    console.log(`Error: ${response.status} ${response.statusText}`);\n    return false;\n  };\n\n  postSignUp = async (data: {\n    login: string;\n    password: string;\n    password_confirm: string;\n    name: string;\n    gender_id: number;\n    captcha: string;\n  }) => {\n    const signupData = new FormData();\n    signupData.append(\"login\", data.login);\n    signupData.append(\"password\", data.password);\n    signupData.append(\"password_confirm\", data.password_confirm);\n    signupData.append(\"name\", data.name);\n    signupData.append(\"gender_id\", `${data.gender_id}`);\n    signupData.append(\"captcha\", data.captcha);\n    const res = await this.postRequest(\"/auth/register\", signupData);\n    return res;\n  };\n\n  postLogin = async (data: {\n    login: string;\n    password: string;\n    captcha: string;\n  }) => {\n    const loginData = new FormData();\n    loginData.append(\"login\", data.login);\n    loginData.append(\"password\", data.password);\n    loginData.append(\"captcha\", data.captcha);\n    const res = await this.postRequest(\"/auth/login\", loginData);\n    if (res) {\n      localStorage.setItem(\"connect_key\", res);\n    }\n    return res;\n  };\n}\n\nexport const authorization = new Authorization();\n","class Captcha {\n  _apiCaptcha: string;\n\n  constructor() {\n    this._apiCaptcha = \"http://109.194.37.212:93//api/auth/captcha\";\n  }\n\n  update = async () => {\n    const response = await fetch(this._apiCaptcha);\n    return response.url;\n  };\n}\n\nexport const captcha = new Captcha();\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { loginSchema } from \"../../../validations/authorization\";\nimport { InputForm } from \"../../molecules/inputForm\";\nimport { Button } from \"../../atoms/Button\";\nimport { SecurityCode } from \"../../molecules/securityCode\";\nimport { Loading } from \"../../molecules/loading\";\nimport { SCREENS } from \"../../../routes/endpoints\";\nimport { authorization } from \"../../../api/authorization\";\nimport { captcha } from \"../../../api/captcha\";\n\nimport \"./formLogin.scss\";\n\nexport const FormLogin: FC = () => {\n  const [btnDisabled, setBtnDisabled] = useState<boolean>(false);\n  const [uploadData, setUploadData] = useState<boolean>(false);\n  const [captchaSrc, setCaptchaSrc] = useState<string>(\"\");\n  const history = useHistory();\n\n  useEffect(() => {\n    updateCaptcha();\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      login: \"\",\n      password: \"\",\n      captcha: \"\",\n    },\n    onSubmit: async (values) => {\n      setBtnDisabled(true);\n      setUploadData(true);\n      const res = await authorization.postLogin(values);\n      if (res) {\n        history.push(SCREENS.SCREEN_CHAT);\n        return;\n      }\n      setBtnDisabled(!res);\n      setUploadData(false);\n      alert(\"Something went wrong\");\n      updateCaptcha();\n    },\n    validationSchema: loginSchema,\n  });\n\n  const updateCaptcha = async () => {\n    setCaptchaSrc(\"\");\n    const CapSrc = await captcha.update();\n    setCaptchaSrc(CapSrc);\n  };\n\n  return (\n    <div className=\"form-login\">\n      <form className=\"form-login__form\" onSubmit={formik.handleSubmit}>\n        <div className=\"form-login__inputs\">\n          <InputForm\n            onChange={(e) => {\n              formik.handleChange(e);\n              setBtnDisabled(false);\n            }}\n            inValidInput={formik.touched.login && Boolean(formik.errors.login)}\n            value={formik.values.login}\n            name=\"login\"\n            description=\"User name\"\n            placeholder=\"Input user name\"\n            type=\"text\"\n            errorText={formik.errors.login}\n          />\n          <InputForm\n            onChange={formik.handleChange}\n            inValidInput={\n              formik.touched.password && Boolean(formik.errors.password)\n            }\n            value={formik.values.password}\n            name=\"password\"\n            description=\"Password\"\n            placeholder=\"Input password\"\n            type=\"password\"\n            errorText={formik.errors.password}\n          />\n          <div className=\"form-login__security-code\">\n            <SecurityCode\n              onChange={formik.handleChange}\n              onClick={updateCaptcha}\n              inValidInput={\n                formik.touched.captcha && Boolean(formik.errors.captcha)\n              }\n              value={formik.values.captcha}\n              name=\"captcha\"\n              theme=\"last-input\"\n              description=\"Security code\"\n              placeholder=\"Security code\"\n              type=\"text\"\n              errorText={formik.errors.captcha}\n              src={captchaSrc}\n            />\n          </div>\n        </div>\n        <div className=\"form-login__buttons\">\n          <Button disabled={btnDisabled} theme=\"submit-auth\" type=\"submit\">\n            Log in\n          </Button>\n          <Button\n            onClick={() => {\n              history.push(SCREENS.SCREEN_SIGNUP);\n            }}\n            theme=\"nav-auth\"\n            type=\"button\"\n          >\n            Registration\n          </Button>\n        </div>\n        {uploadData ? <Loading /> : \"\"}\n      </form>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { Logo } from \"../../atoms/logo\";\nimport { FormLogin } from \"../../organisms/formLogin\";\n\nimport \"./login.scss\";\n\nexport const Login: FC = () => {\n  return (\n    <div className=\"login\">\n      <div className=\"login__left\">\n        <div className=\"login__left-content\">\n          <div className=\"login__header\">\n            <Logo theme=\"login\" />\n            <h1 className=\"login__header-title\">\n              Wellcome to <span className=\"_color-blue\">Chatty</span>\n              <span className=\"_color-light-blue\">!</span>\n            </h1>\n            <h2 className=\"login__header-description\">\n              Please, autorize yourself\n            </h2>\n          </div>\n          <FormLogin />\n        </div>\n      </div>\n      <div className=\"login__right\"></div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./chatHeader.scss\";\nimport { Logo } from \"../../atoms/logo\";\n\ninterface ChatHeaderProps {\n  focusChat: boolean;\n}\n\nexport const ChatHeader: FC<ChatHeaderProps> = ({ focusChat }) => {\n  return (\n    <div\n      className={cn(\"chat-header\", focusChat ? \"chat-header_focus-chat\" : \"\")}\n    >\n      <Logo theme=\"chatHeader\" />\n      <div className=\"chat-header__icon\">\n        <img\n          className=\"chat-header__icon-img\"\n          src=\"/image/icon/iconChatHeader.svg\"\n        />\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./iconProfile.scss\";\n\ninterface IconProfileProps {\n  gender: string;\n  theme?: string;\n}\n\nexport const IconProfile: FC<IconProfileProps> = ({ theme, gender }) => {\n  return (\n    <img\n      className={cn(\"icon-profile\", `icon-profile_${theme}`)}\n      src={`/image/icon/iconProfile${gender}.svg`}\n    />\n  );\n};\n","import React, { FC } from \"react\";\nimport { IconProfile } from \"../../atoms/iconProfile\";\nimport cn from \"classnames\";\nimport { SCREENS } from \"../../../routes/endpoints\";\n\nimport \"./chatContactItem.scss\";\nimport { NavLink } from \"react-router-dom\";\n\ninterface ChatContactItemProps {\n  name: string;\n  gender: string;\n  lastMsg?: string;\n  lastMsgYou?: boolean;\n  select?: boolean;\n  id: string | number;\n  onClick?: () => void;\n}\n\nexport const ChatContactItem: FC<ChatContactItemProps> = ({\n  name,\n  gender,\n  lastMsg,\n  lastMsgYou,\n  select,\n  id,\n  onClick,\n}) => {\n  const lastMsgShort = (lastMsg: string) => {\n    if (lastMsg.length > 20) {\n      return lastMsg.substr(0, 10) + \"...\";\n    }\n    return lastMsg;\n  };\n\n  return (\n    <NavLink\n      onClick={onClick}\n      to={SCREENS.SCREEN_CHAT + `/${id}`}\n      activeClassName=\"_select\"\n    >\n      <div\n        className={cn(\n          \"chat-contact-item\",\n          select ? \"chat-contact-item_select\" : \"\"\n        )}\n      >\n        <IconProfile gender={gender} />\n        <div className=\"chat-contact-item__description\">\n          <h3 className=\"chat-contact-item__name\">{name}</h3>\n          {lastMsg && (\n            <p className=\"chat-contact-item__lastMsg\">\n              {lastMsgYou && (\n                <span className=\"chat-contact-item__lastMsg_you\">You: </span>\n              )}\n              {lastMsgShort(lastMsg)}\n            </p>\n          )}\n        </div>\n      </div>\n    </NavLink>\n  );\n};\n","import { makeAutoObservable, toJS } from \"mobx\";\nimport { IContact, IFile } from \"../types/types\";\n\nclass Contacts {\n  allUsers: IContact[] = [];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  saveMessage(\n    message: {\n      text: string;\n      your: boolean;\n      fileData?: { file: File; url: string };\n    },\n    personId: string\n  ) {\n    this.allUsers = this.allUsers.map((contact) => {\n      if (contact.id === personId) {\n        contact.dialogue.unshift(message);\n      }\n      return contact;\n    });\n  }\n\n  initialAllUsers(data: { name: string; gender: string }[]) {\n    this.allUsers = data.map((item, index) => ({\n      name: item.name,\n      gender: item.gender,\n      id: String(index),\n      dialogue: [],\n    }));\n  }\n}\n\nexport const contacts = new Contacts();\n","import React, { FC } from \"react\";\nimport { ChatContactItem } from \"../../molecules/chatContactItem\";\nimport { IContact } from \"../../../types/types\";\nimport { contacts } from \"../../../store/contacts\";\nimport { Loading } from \"../../molecules/loading\";\nimport { toJS } from \"mobx\";\n\nimport \"./chatContactList.scss\";\n\ninterface ChatContactListProps {\n  loading: boolean;\n  onClick?: () => void;\n}\n\nexport const ChatContactList: FC<ChatContactListProps> = ({\n  onClick,\n  loading,\n}) => {\n  const createListContact = (data: IContact[] | undefined) => {\n    if (typeof data !== \"undefined\" && data.length > 0) {\n      return data.map((item) => {\n        const { name, gender, id, dialogue } = item;\n        const lastMsg = dialogue.length > 0 ? dialogue[0] : \"\";\n        if (item.name && item.gender) {\n          return (\n            <ChatContactItem\n              onClick={onClick}\n              key={id}\n              id={id}\n              name={name}\n              gender={gender}\n              lastMsg={lastMsg ? lastMsg.text : \"\"}\n              lastMsgYou={lastMsg ? lastMsg.your : false}\n            />\n          );\n        }\n      });\n    }\n    return (\n      <div className=\"chat-list-contact__no-contact\">\n        <img\n          className=\"chat-list-contact__no-contact-img\"\n          src=\"/image/noContact.svg\"\n        />\n        <p className=\"chat-list-contact__no-contact-text\">\n          There is no other users yet\n        </p>\n      </div>\n    );\n  };\n  const contactList = toJS(contacts.allUsers);\n  const listContactItem = createListContact(contactList);\n\n  return (\n    <div className=\"chat-list-contact\">\n      {loading ? <Loading /> : listContactItem}\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport cn from \"classnames\";\n\nimport \"./message.scss\";\n\ninterface MessageProps {\n  children: React.ReactNode;\n  yourMsg: boolean;\n}\n\nexport const Message: FC<MessageProps> = ({ children, yourMsg }) => {\n  return (\n    <div\n      className={cn(\n        \"message\",\n        yourMsg ? \"message_your-msg\" : \"message_some-else-msg\"\n      )}\n    >\n      <div className=\"message__text\">{children}</div>\n    </div>\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\n\nclass MessageInput {\n  value = \"\";\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  onChange(e: React.ChangeEvent<HTMLInputElement>) {\n    this.value = e.target.value;\n  }\n\n  resetInput() {\n    this.value = \"\";\n  }\n}\n\nexport const messageInput = new MessageInput();\n","import React, { FC, useState, useEffect } from \"react\";\n\nimport \"./fileMsg.scss\";\n\ninterface FileMsgProps {\n  file: File;\n  url?: string;\n}\n\nexport const FileMsg: FC<FileMsgProps> = ({ file, url }) => {\n  const [urlFile, setUrlFile] = useState<string>(\"\");\n  const sizeString =\n    file.size > 1048576\n      ? `${(file.size / 1048576).toFixed(2)} MB`\n      : `${(file.size / 1024).toFixed(2)} KB`;\n\n  useEffect(() => {\n    const fileType = file.type;\n    if (\n      fileType === \"image/jpeg\" ||\n      fileType === \"image/gif\" ||\n      fileType === \"image/png\" ||\n      fileType === \"image/svg+xml\"\n    ) {\n      if (url) {\n        setUrlFile(url);\n      } else {\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = () => {\n          setUrlFile(`${reader.result}`);\n        };\n      }\n    } else {\n      setUrlFile(\"/image/fileIcon.svg\");\n    }\n  }, []);\n\n  return (\n    <div className=\"file-msg\">\n      <img className=\"file-msg__icon\" src={urlFile} />\n      <div className=\"file-msg__description\">\n        <p className=\"file-msg__name\">{file.name}</p>\n        <p className=\"file-msg__size\">{sizeString}</p>\n      </div>\n    </div>\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\n\nclass StoreFile {\n  file: any = {};\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  addFile(file: File) {\n    this.file = file;\n  }\n\n  resetStore() {\n    this.file = {};\n  }\n}\n\nexport const storeFile = new StoreFile();\n","import React, { FC } from \"react\";\nimport { Input } from \"../../atoms/Input\";\nimport { Button } from \"../../atoms/Button\";\nimport { observer } from \"mobx-react-lite\";\nimport { messageInput } from \"../../../store/messageInput\";\nimport { FileMsg } from \"../fileMsg\";\nimport { storeFile } from \"../../../store/storeFile\";\nimport cn from \"classnames\";\n\nimport \"./inputMsg.scss\";\n\ninterface LogoProps {\n  placeholder: string;\n  fileLoaded?: boolean;\n  onSendMsg?: () => void;\n  onLoadFile?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\nexport const InputMsg: FC<LogoProps> = observer(\n  ({ placeholder, onSendMsg, onLoadFile, fileLoaded }) => {\n    return (\n      <div className={cn(\"input-msg\", fileLoaded ? \"input-msg_with-file\" : \"\")}>\n        {/* <div className=\"input-msg__interface\"> */}\n        <Button>\n          <label className=\"input-msg__clip-label\">\n            <input\n              onChange={onLoadFile}\n              className=\"input-msg__clip-input-file\"\n              type=\"file\"\n            />\n            <img\n              className=\"input-msg__clip-icon\"\n              src=\"/image/icon/clipIcon.svg\"\n            />\n          </label>\n        </Button>\n        <div\n          className={cn(\n            \"input-msg__input\",\n            fileLoaded ? \"input-msg__input_with-file\" : \"\"\n          )}\n        >\n          <Input\n            value={messageInput.value}\n            type=\"text\"\n            onChange={(e) => messageInput.onChange(e)}\n            placeholder={placeholder}\n            theme=\"chat\"\n          />\n          {fileLoaded ? <FileMsg file={storeFile.file} /> : \"\"}\n        </div>\n        <Button onClick={onSendMsg}>\n          <img\n            className=\"input-msg__send-icon\"\n            src=\"/image/icon/sendIcon.svg\"\n          />\n        </Button>\n        {/* </div> */}\n      </div>\n    );\n  }\n);\n","export default __webpack_public_path__ + \"static/media/arrowChatHeader.139af588.svg\";","import React, { FC } from \"react\";\nimport { Button } from \"../../atoms/Button\";\nimport arrowBack from \"../../../assets/arrowChatHeader.svg\";\n\nimport \"./chatMsgHeader.scss\";\nimport { IconProfile } from \"../../atoms/iconProfile\";\n\ninterface ChatMsgHeaderProps {\n  name?: string;\n  gender?: string;\n  lastSeen?: string;\n  onBack?: () => void;\n}\n\nexport const ChatMsgHeader: FC<ChatMsgHeaderProps> = ({\n  name,\n  lastSeen,\n  onBack,\n  gender,\n}) => {\n  return (\n    <div className=\"chat-msg-header\">\n      <Button onClick={onBack} theme=\"arrow-chat-header-mobile\">\n        <img src={arrowBack} alt=\"back\" />\n      </Button>\n      <IconProfile\n        theme=\"chat-header-mobile\"\n        gender={gender ? gender : \"male\"}\n      />\n      <div className=\"chat-msg-header__contact\">\n        <h3 className=\"chat-msg-header__name\">{name}</h3>\n        <div className=\"chat-msg-header__description\">\n          <p className=\"chat-msg-header__last-seen\">Last seen</p>\n          <span className=\"chat-msg-header__time-last-seen\">{lastSeen}</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Loading } from \"../../molecules/loading\";\nimport { Message } from \"../../molecules/message\";\nimport { InputMsg } from \"../../molecules/inputMsg\";\nimport { ChatMsgHeader } from \"../../molecules/chatMsgHeader\";\nimport { FileMsg } from \"../../molecules/fileMsg\";\nimport \"./chatMessage.scss\";\nimport { IDialogue } from \"../../../types/types\";\nimport cn from \"classnames\";\n\ninterface ChatMessageProps {\n  name?: string;\n  lastSeen?: string;\n  gender?: string;\n  dialogue?: IDialogue[];\n  loading?: boolean;\n  noContact?: boolean;\n  fileLoaded?: boolean;\n  onBack?: () => void;\n  onSendMsg?: () => void;\n  onLoadFile?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n}\n\ninterface ParamTypes {\n  idContact: string;\n}\n\nexport const ChatMessage: FC<ChatMessageProps> = ({\n  name,\n  lastSeen,\n  gender,\n  dialogue,\n  loading,\n  noContact = false,\n  onBack,\n  onSendMsg,\n  onLoadFile,\n  fileLoaded,\n}) => {\n  const { idContact } = useParams<ParamTypes>();\n\n  const createDialogue = (dialogue: IDialogue[]) => {\n    if (idContact) {\n      return dialogue.map((dialogue, index) => {\n        const { text, your, fileData } = dialogue;\n        if (fileData) {\n          return (\n            <Message key={index} yourMsg={your}>\n              {text}\n              <a href={fileData.url}>\n                <FileMsg file={fileData.file} url={fileData.url} />\n              </a>\n            </Message>\n          );\n        }\n        return (\n          <Message key={index} yourMsg={!!your}>\n            {text}\n          </Message>\n        );\n      });\n    }\n    return (\n      <div className=\"chat-message__dialogue-no-selected\">\n        <p className=\"chat-message__dialogue-no-selected-text\">\n          Select a chat to stary messaging\n        </p>\n      </div>\n    );\n  };\n\n  const listMessage = createDialogue(dialogue ? dialogue : []);\n\n  const chatMsgHeader = idContact && !loading && (\n    <ChatMsgHeader\n      gender={gender}\n      onBack={onBack}\n      name={name}\n      lastSeen={lastSeen}\n    />\n  );\n  const inputMsg = idContact && !loading && (\n    <InputMsg\n      placeholder=\"Write something...\"\n      onSendMsg={onSendMsg}\n      onLoadFile={onLoadFile}\n      fileLoaded={fileLoaded}\n    />\n  );\n\n  return (\n    <div className=\"chat-message\">\n      {chatMsgHeader}\n      {!noContact && (\n        <div\n          className={cn(\n            \"chat-message__messages\",\n            fileLoaded ? \"chat-message__messages_with-file\" : \"\"\n          )}\n        >\n          {loading && <Loading />}\n          {!loading && listMessage}\n        </div>\n      )}\n      {inputMsg}\n    </div>\n  );\n};\n","class UploadFile {\n  _apiUploadFile: string;\n\n  constructor() {\n    this._apiUploadFile = \"http://109.194.37.212:93/api/upload\";\n  }\n\n  postFile = async (file: File) => {\n    const data = new FormData();\n    data.append(String(0), file, file.name);\n    const response = await fetch(this._apiUploadFile, {\n      method: \"POST\",\n      body: data,\n      headers: {\n        \"Access-Control-Allow-Origin\": \"*\",\n      },\n      credentials: \"same-origin\",\n    });\n    if (response.ok) {\n      const json = await response.text();\n      return json;\n    } else {\n      return false;\n    }\n  };\n}\n\nconst uploadFile = new UploadFile();\n\nexport { uploadFile };\n","export default __webpack_public_path__ + \"static/media/arrowSelector.6d3f84ad.svg\";","import React, { FC } from \"react\";\nimport Select, { components, DropdownIndicatorProps } from \"react-select\";\nimport arrowSelector from \"../../../assets/arrowSelector.svg\";\n\nimport \"./selectGender.scss\";\n\nconst customStyles = {\n  option: (provided: any, state: any) => ({\n    ...provided,\n    padding: 16,\n  }),\n  menu: (provided: any) => ({\n    ...provided,\n    width: \"calc(50% - 9px)\",\n  }),\n  control: () => ({\n    // none of react-select's styles are passed to <Control />\n    display: \"flex\",\n    border: \"1px solid #B3CDF8\",\n    borderRadius: \"8px\",\n    height: \"54px\",\n    width: \"calc(50% - 12px)\",\n  }),\n  singleValue: (provided: any, state: any) => {\n    const opacity = state.isDisabled ? 0.5 : 1;\n    const transition = \"opacity 300ms\";\n    return { ...provided, opacity, transition };\n  },\n  placeholder: (provided: any) => ({\n    ...provided,\n    text: \"Your gender\",\n    color: \"#9F9F9F\",\n    fontFamily: \"Montserrat\",\n    fontWeight: 400,\n    fontSize: \"15px\",\n    lineHeight: \"23px\",\n    paddingLeft: 0,\n    marginLeft: 0,\n  }),\n\n  valueContainer: (provided: any) => ({\n    ...provided,\n    paddingLeft: \"16px\",\n  }),\n\n  indicatorSeparator: () => ({\n    display: \"none\",\n  }),\n};\n\nconst DropdownIndicator = (props: DropdownIndicatorProps) => {\n  return (\n    <components.DropdownIndicator {...props}>\n      <img src={arrowSelector} />\n    </components.DropdownIndicator>\n  );\n};\n\ninterface SelectGenderProps {\n  name?: string;\n  description: string;\n  onChange: (e: any) => any;\n  genders: {\n    gender_id: number;\n    gender: string;\n  }[];\n}\n\nexport const SelectGender: FC<SelectGenderProps> = ({\n  description,\n  genders,\n  name,\n  onChange,\n}) => {\n  const optionGenders = genders.map((item) => ({\n    value: item.gender_id,\n    label: item.gender,\n  }));\n\n  return (\n    <div className=\"select-gender\">\n      <span className=\"select-gender__description\">{description}</span>\n      <Select\n        onChange={onChange}\n        options={optionGenders}\n        styles={customStyles}\n        components={{ DropdownIndicator }}\n        name={name}\n      />\n    </div>\n  );\n};\n","import { makeAutoObservable } from \"mobx\";\n\nclass Genders {\n  gender = [\n    { gender: \"Male\", gender_id: 1 },\n    { gender: \"Female\", gender_id: 2 },\n  ];\n\n  constructor() {\n    makeAutoObservable(this);\n  }\n\n  async getGender() {\n    const response = await fetch(\"http://109.194.37.212:93/api/auth\");\n    if (response.ok) {\n      const res = await response.json();\n      this.gender = res.genders.map((item: { id: number; gender: string }) => ({\n        gender: item.gender,\n        gender_id: item.id,\n      }));\n    }\n  }\n}\n\nexport const genders = new Genders();\n","import React, { FC, useState, useEffect } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport { useFormik } from \"formik\";\nimport { signupSchema } from \"../../../validations/authorization\";\nimport { InputForm } from \"../../molecules/inputForm\";\nimport { Button } from \"../../atoms/Button\";\nimport { SecurityCode } from \"../../molecules/securityCode\";\nimport { Loading } from \"../../molecules/loading\";\nimport { SCREENS } from \"../../../routes/endpoints\";\nimport { SelectGender } from \"../../molecules/selectGender\";\nimport { authorization } from \"../../../api/authorization\";\nimport { genders } from \"../../../store/genders\";\nimport { observer } from \"mobx-react-lite\";\nimport { captcha } from \"../../../api/captcha\";\n\nimport \"./formSignup.scss\";\n\nexport const FormSignup: FC = observer(() => {\n  const history = useHistory();\n  const [btnDisabled, setBtnDisabled] = useState<boolean>(false);\n  const [uploadData, setUploadData] = useState<boolean>(false);\n  const [captchaSrc, setCaptchaSrc] = useState<string>(\"\");\n\n  useEffect(() => {\n    genders.getGender();\n    updateCaptcha();\n  }, []);\n\n  const formik = useFormik({\n    initialValues: {\n      login: \"\",\n      password: \"\",\n      password_confirm: \"\",\n      name: \"\",\n      gender_id: 0,\n      captcha: \"\",\n    },\n    onSubmit: async (values) => {\n      setBtnDisabled(true);\n      setUploadData(true);\n      const res = await authorization.postSignUp(values);\n      if (res) {\n        history.push(SCREENS.SCREEN_LOGIN);\n        return;\n      }\n      setUploadData(false);\n      setBtnDisabled(!res);\n      alert(\"Something went wrong\");\n      updateCaptcha();\n    },\n    validationSchema: signupSchema,\n  });\n\n  const onChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    formik.handleChange(e);\n    setBtnDisabled(false);\n  };\n\n  const updateCaptcha = async () => {\n    setCaptchaSrc(\"\");\n    const CapSrc = await captcha.update();\n    setCaptchaSrc(CapSrc);\n  };\n\n  return (\n    <div className=\"form-signup\">\n      <form className=\"form-signup__form\" onSubmit={formik.handleSubmit}>\n        <div className=\"form-signup__inputs\">\n          <InputForm\n            onChange={onChange}\n            inValidInput={formik.touched.login && Boolean(formik.errors.login)}\n            value={formik.values.login}\n            name=\"login\"\n            description=\"Create user name\"\n            placeholder=\"Input user name\"\n            type=\"text\"\n            errorText={formik.errors.login}\n          />\n          <InputForm\n            onChange={onChange}\n            inValidInput={\n              formik.touched.password && Boolean(formik.errors.password)\n            }\n            value={formik.values.password}\n            name=\"password\"\n            description=\"Create password\"\n            placeholder=\"Input password\"\n            type=\"password\"\n            errorText={formik.errors.password}\n          />\n          <InputForm\n            onChange={onChange}\n            inValidInput={\n              formik.touched.password_confirm &&\n              Boolean(formik.errors.password_confirm)\n            }\n            value={formik.values.password_confirm}\n            name=\"password_confirm\"\n            description=\"Password confirmation\"\n            placeholder=\"Password confirmation\"\n            type=\"password\"\n            errorText={formik.errors.password_confirm}\n          />\n          <InputForm\n            onChange={onChange}\n            inValidInput={formik.touched.name && Boolean(formik.errors.name)}\n            value={formik.values.name}\n            name=\"name\"\n            description=\"Nickname\"\n            placeholder=\"Nickname\"\n            type=\"text\"\n            errorText={formik.errors.name}\n          />\n          <SelectGender\n            description=\"Your gender\"\n            onChange={(selectedOption) => {\n              formik.setFieldValue(\"gender_id\", selectedOption.value);\n              setBtnDisabled(false);\n            }}\n            genders={genders.gender}\n          />\n          <div className=\"form-signup__security-code\">\n            <SecurityCode\n              onChange={onChange}\n              onClick={updateCaptcha}\n              inValidInput={\n                formik.touched.captcha && Boolean(formik.errors.captcha)\n              }\n              value={formik.values.captcha}\n              name=\"captcha\"\n              theme=\"last-input\"\n              description=\"Security code\"\n              placeholder=\"Security code\"\n              type=\"text\"\n              errorText={formik.errors.captcha}\n              src={captchaSrc}\n            />\n          </div>\n        </div>\n        <div className=\"form-signup__buttons\">\n          <Button disabled={btnDisabled} theme=\"submit-auth\" type=\"submit\">\n            Registration\n          </Button>\n          <Button\n            onClick={() => {\n              history.push(SCREENS.SCREEN_LOGIN);\n            }}\n            theme=\"nav-auth\"\n            type=\"button\"\n          >\n            Log in\n          </Button>\n        </div>\n        {uploadData ? <Loading /> : \"\"}\n      </form>\n    </div>\n  );\n});\n","import React, { FC, useEffect } from \"react\";\nimport { Logo } from \"../../atoms/logo\";\nimport { FormSignup } from \"../../organisms/formSignup\";\nimport \"./signup.scss\";\n\nexport const Signup: FC = () => {\n  return (\n    <div className=\"signup\">\n      <div className=\"signup__left\">\n        <div className=\"signup__left-content\">\n          <div className=\"signup__header\">\n            <Logo theme=\"signup\" />\n            <h1 className=\"signup__header-title\">\n              Sign Up to <span className=\"_color-blue\">Chatty</span>\n              <span className=\"_color-light-blue\">!</span>\n            </h1>\n            <h2 className=\"signup__header-description\">Registration</h2>\n          </div>\n          <FormSignup />\n        </div>\n      </div>\n      <div className=\"signup__right\"></div>\n    </div>\n  );\n};\n","import React, { FC } from \"react\";\nimport { SCREENS } from \"./endpoints\";\nimport { Route, Switch, Redirect } from \"react-router-dom\";\nimport { Login } from \"../components/pages/login\";\nimport { Chat } from \"../components/pages/chat\";\nimport { Signup } from \"../components/pages/signup\";\n\nexport const Routes: FC = () => {\n  return (\n    <Switch>\n      <Route path={SCREENS.SCREEN_LOGIN} exact>\n        <Login />\n      </Route>\n      <Route path={SCREENS.SCREEN_SIGNUP} exact>\n        <Signup />\n      </Route>\n      <Route path={[`${SCREENS.SCREEN_CHAT}/:idContact`, SCREENS.SCREEN_CHAT]}>\n        <Chat />\n      </Route>\n      <Redirect to={SCREENS.SCREEN_LOGIN} />\n    </Switch>\n  );\n};\n","import React, { FC } from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport \"./App.scss\";\nimport { Routes } from \"./routes\";\n\nconst App: FC = () => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Routes />\n      </div>\n    </Router>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from \"web-vitals\";\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}